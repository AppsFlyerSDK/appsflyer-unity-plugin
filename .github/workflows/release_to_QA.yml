name: Release to QA

on:
  workflow_call:

jobs:
  Release-To-QA:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - uses: actions/checkout@v3
      - name: Login to Github
        env:
          COMMIT_AUTHOR: ${{ secrets.CI_USERNAME }}
          COMMIT_EMAIL: ${{ secrets.CI_EMAIL }}
        run: |
          git config --global user.name $COMMIT_AUTHOR
          git config --global user.email $COMMIT_EMAIL

      - name: Check fixed version and compare issues on Jira
        env:
          JIRA_TOKEN: ${{ secrets.CI_JIRA_TOKEN }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          plugin_version=$(echo "$BRANCH_NAME" | grep -Eo '[0-9]+.[0-9]+.[0-9]+')
          jira_fixed_version="Unity SDK v$plugin_version"
          echo "JIRA_FIXED_VERSION=$jira_fixed_version" >> $GITHUB_ENV
          chmod +x .github/workflows/Scripts/checkJira.sh
          .github/workflows/Scripts/checkJira.sh $JIRA_TOKEN "$jira_fixed_version"

      - name: Update package.json
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          COMMIT_AUTHOR: ${{ secrets.CI_USERNAME }}
          COMMIT_EMAIL: ${{ secrets.CI_EMAIL }}
        run: |
          echo "updating package.json version"
          plugin_version=$(echo "$BRANCH_NAME" | grep -Eo '[0-9]+.[0-9]+.[0-9]+')
          sed -E -i "s/\"version\": \"[0-9]+.[0-9]+.[0-9]+\"/\"version\": \"$plugin_version\"/g" Assets/AppsFlyer/package.json

          if [[ -n $(git status -s) ]]; then
            echo "Commit and push"
            git add Assets/AppsFlyer/package.json
            git commit -m "update package.json"
            git push origin $BRANCH_NAME
          else
            echo "package.json version is already up to date"
          fi

      - name: Send slack report
        env:
          SLACK_TOKEN: ${{ secrets.CI_SLACK_TOKEN }}
        run: |
          ios_af_sdk_version=$(cat README.md | grep -Eo 'iOS AppsFlyer SDK v[0-9]+.[0-9]+.[0-9]+')
          android_af_sdk_version=$(cat README.md | grep -Eo 'Android AppsFlyer SDK v[0-9]+.[0-9]+.[0-9]+')
          
          # Extract plugin version from branch name
          plugin_version=$(echo "${{github.ref_name}}" | grep -Eo '[0-9]+.[0-9]+.[0-9]+')
          
          # Send webhook to Slack with all required parameters
          curl -X POST -H 'Content-type: application/json' --data '{
            "plugin_version": "'"$plugin_version"'",
            "git_branch": "'"${{github.ref_name}}"'",
            "ios_sdk_dependency": "'"$ios_af_sdk_version"'",
            "android_sdk_dependency": "'"$android_af_sdk_version"'",
            "version_changes": "New Unity Plugin Release: Unity SDK v'"$plugin_version"'",
            "deploy_type": "QA"
          }' "$SLACK_TOKEN"

