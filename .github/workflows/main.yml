name: Test runner unity-appsflyer-plugin

on:
  workflow_call:

jobs:
  run-unity-tests:
    name: Run ${{ matrix.testMode }} tests for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        testMode: [playmode]
        targetPlatform: [iOS, Android, Shared]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Free up disk space
        run: |
          rm -rf /usr/share/dotnet/
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"
          rm -rf /opt/ghc

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ matrix.testMode }}-${{ hashFiles('**/*.cs') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-${{ matrix.testMode }}-
            Library-${{ matrix.targetPlatform }}-
            Library-

      - uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: .
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.targetPlatform }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.targetPlatform }} Test Results
          customParameters: >
            -nographics
            -buildTarget ${{ matrix.targetPlatform == 'Shared' && 'StandaloneLinux64' || matrix.targetPlatform }}
            -defineSymbols ${{ matrix.targetPlatform == 'Shared' && '' || format('UNITY_{0}', matrix.targetPlatform) }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test results - ${{ matrix.targetPlatform }}
          path: ${{ steps.tests.outputs.artifactsPath }}
