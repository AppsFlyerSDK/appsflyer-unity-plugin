name: check packages and release to upm

on:
  workflow_call:
    inputs:
      plugin_version:
        required: true
        type: string

jobs:
  check-packages:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: get version
        run: | 
          echo "PLUGIN_VERSION=${{ inputs.plugin_version }}" >> $GITHUB_ENV
        
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7.8'
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install unitypackage_extractor
      - name: execute py script
        run:
          python .github/workflows/Scripts/extractPackage.py appsflyer-unity-plugin-${{env.PLUGIN_VERSION}}.unitypackage strict-mode-sdk/appsflyer-unity-plugin-strict-mode-${{env.PLUGIN_VERSION}}.unitypackage
          
  release-upm:
    runs-on: ubuntu-latest
    needs: check-packages
    steps:
      - uses: actions/checkout@v2
      - name: split branch
        env:
            COMMIT_AUTHOR: ${{ secrets.CI_USERNAME }}
            COMMIT_EMAIL: ${{ secrets.CI_EMAIL }}
        run: |
          git branch -d upm &> /dev/null || echo upm branch not found
          git subtree split -P Assets/AppsFlyer -b upm
          git checkout upm
          echo "Checked out to upm branch"
          git config --global user.name $COMMIT_AUTHOR
          git config --global user.email $COMMIT_EMAIL
          git rm -r Tests
          git commit -m "Remove Tests folder from upm branch"
          echo "Removed Tests folder"
          git push -f -u origin upm
      - name: create tag
        run: |
          git tag v${{inputs.plugin_version}}
          git push origin v${{inputs.plugin_version}}
          echo "Release v${{inputs.plugin_version}} to upm :bookmark:"


  strict-upm:
    runs-on: ubuntu-latest
    needs: check-packages
    steps:
      - uses: actions/checkout@v2
      - name: split branch
        env:
            COMMIT_AUTHOR: ${{ secrets.CI_USERNAME }}
            COMMIT_EMAIL: ${{ secrets.CI_EMAIL }}
        run: |
          git branch -d Strict-upm &> /dev/null || echo Strict-upm branch not found
          git subtree split -P Assets/AppsFlyer -b Strict-upm
          git checkout Strict-upm
          echo "Checked out to Strict-upm branch"
          git config --global user.name $COMMIT_AUTHOR
          git config --global user.email $COMMIT_EMAIL
          git rm -r Tests
          git commit -m "Remove Tests folder from Strict-upm branch"
          echo "Removed Tests folder"
      - name: Modify for strict mode
        run: |
          echo "Changing AppsFlyerFramework to Strict Mode"
          grep -q "AppsFlyerFramework" Editor/AppsFlyerDependencies.xml
          sed -i 's/AppsFlyerFramework/AppsFlyerFramework\/Strict/g' Editor/AppsFlyerDependencies.xml
          echo "Changing package.json to Strict Mode"
          grep -q "AppsFlyer Unity plugin" ./package.json
          sed -i 's/AppsFlyer Unity plugin/AppsFlyer Unity plugin strict mode/g' ./package.json
          echo "Commenting out disableAdvertisingIdentifier"
          grep -q "\[AppsFlyerLib shared\].disableAdvertisingIdentifier" Plugins/iOS/AppsFlyeriOSWrapper.mm
          sed -i 's/\[AppsFlyerLib shared\].disableAdvertisingIdentifier/\/\/\[AppsFlyerLib shared\].disableAdvertisingIdentifier/g' Plugins/iOS/AppsFlyeriOSWrapper.mm
          echo "Commenting out waitForATTUserAuthorizationWithTimeoutInterval"
          grep -q "\[\[AppsFlyerLib shared\] waitForATTUserAuthorizationWithTimeoutInterval:timeoutInterval\];" Plugins/iOS/AppsFlyeriOSWrapper.mm
          sed -i 's/\[\[AppsFlyerLib shared\] waitForATTUserAuthorizationWithTimeoutInterval:timeoutInterval\];/\/\/\[\[AppsFlyerLib shared\] waitForATTUserAuthorizationWithTimeoutInterval:timeoutInterval\];/g' Plugins/iOS/AppsFlyeriOSWrapper.mm

      - name: Commit changes and push
        env:
            COMMIT_AUTHOR: ${{ secrets.CI_USERNAME }}
            COMMIT_EMAIL: ${{ secrets.CI_EMAIL }}
        run: |
          git config user.name $COMMIT_AUTHOR
          git config user.email $COMMIT_EMAIL
          git add -A
          git commit -m "update package.json"
          git push -f -u origin Strict-upm
      - name: create tag
        run: |
          git tag Strict-v${{inputs.plugin_version}}
          git push origin Strict-v${{inputs.plugin_version}}
          echo "Release Strict mode v${{inputs.plugin_version}} to upm :bookmark:"
      
     
